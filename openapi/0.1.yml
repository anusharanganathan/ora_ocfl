openapi: 3.0.2
info:
  description: OCFL Client API designed for ORA Digital Preservation Layer, the project is maintained at https://github.com/tomwrobel/ora_ocfl/openapi
  version: "0.1"
  title: ORA OCFL API
  contact:
    email: thomas.wrobel@bodleian.ox.ac.uk
  license:
    name: MIT
    url: 'https://github.com/tomwrobel/ora_ocfl/LICENSE'
tags:
  - name: All versions
    description: Features that are not related to object versions
  - name: Working
    description: Prepare a new version for ingest into OCFL (the client should not create the version until the version is created by POST call to /working)
  - name: Head
    description: Functionality which acts on last complete version of an object (i.e. head)
  - name: Version-specific
    description: Features that require knowledge of an object's version history
  - name: File operations
    description: operations that take place on files within an OCFL object
  - name: ORA specific
    description: Features that reflect ORA business requirements
  - name: Non-specification
    description: Features that are not described in the OCFL specification
paths:
  '/objects/{objectId}':
    get:
      tags:
        - All versions
      summary: Find object by ID
      description: Returns a single object's OCFL metadata
      operationId: getObjectById
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OCFLObject'
            application/json:
              schema:
                $ref: '#/components/schemas/OCFLObject'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security: 
      - AdminApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
      - BasicApiKeyAuth: []
    post:
      tags:
        - All versions
      summary: Create a new OCFL object (with files if provided)
      description: Creates a new OCFL object with the specified ID
      operationId: createObject
      parameters:
        - name: objectId
          in: path
          description: ID of object to create
          required: true
          schema:
            type: string
      requestBody:
        description: Zip of files to be uploaded along with the object
        required: false
        content: 
          'application/zip':
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
    delete:
      tags:
        - All versions
      summary: Create a new OCFL object (with files if provided)
      description: Creates a new OCFL object with the specified ID
      operationId: deleteObject
      parameters:
        - name: objectId
          in: path
          description: ID of object to create
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
  '/objects/download/{objectId}':
    get:
      tags:
        - All versions
      summary: Get complete of the OCFL object
      description: Returns a copy of an entire OCFL object has stored on disk
      operationId: archiveObjectById
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security: 
      - AdminApiKeyAuth: []
  '/objects/{objectId}/files/existing_path/{path}':
    get:
      tags:
        - All versions
        - File operations
      summary: >-
        Get information regarding an individual file in the current version of
        an OCFL object
      description: Returns a list of all manifest information relating to that file
      operationId: getFileByExistingPath
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: path
          in: path
          description:  Existing file path of the file within the ORA object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
            application/json:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
    delete:
      tags:
        - All versions
        - File operations
        - Non-specification
      summary: Remove a file completely from an OCFL object
      description: Purge a file from an OCFL object
      operationId: purgeFile
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: path
          in: path
          description: Existing file path of the file within the ORA object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OCFLObject'
            application/json:
              schema:
                $ref: '#/components/schemas/OCFLObject'
        '400':
          description: Invalid Object ID supplied or file not found
        '404':
          description: Object or file not found
      security:
      - AdminApiKeyAuth: []
  '/objects/{objectId}/files/hash/{sha512}':
    get:
      tags:
        - All versions
        - File operations
      summary: >-
        Get information regarding an individual file in the current version of
        an OCFL object
      description: Returns a list of all manifest information relating to that file
      operationId: getFileByHash
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: sha512
          in: path
          description: Hash of the file in the inventory manifest (nomally sha512)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
            application/json:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
    delete:
      tags:
        - All versions
        - File operations
        - Non-specification
      summary: >-
        Remove a file completely from an OCFL object
      description: Purge a file from an OCFL object
      operationId: purgeFilebyExistingPath
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: sha512
          in: path
          description: Hash of the file in the inventory manifest (nomally sha512)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OCFLObject'
            application/json:
              schema:
                $ref: '#/components/schemas/OCFLObject'
        '400':
          description: Invalid Object ID supplied or file not found
        '404':
          description: Object or file not found
      security:
      - AdminApiKeyAuth: []
  '/objects/{objectId}/files/download/existing_path/{path}':
    get:
      tags:
        - All versions
        - File operations
      summary: >-
        Download an individual file from an OCFL object
      description: Returns a binary file from an OCFL object
      operationId: downloadFileByExistingPath
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: path
          in: path
          description:  Existing file path of the file within the ORA object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
  '/objects/{objectId}/files/download/hash/{sha512}':
    get:
      tags:
        - All versions
        - File operations
      summary: >-
        Download an individual file from an OCFL object
      description: Returns a binary file from an OCFL object
      operationId: downloadFileByHash
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: sha512
          in: path
          description: Hash of the file in the inventory manifest (nomally sha512)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
  '/objects/{objectId}/files/fixity/existing_path/{path}':
    get:
      tags:
        - All versions
        - File operations
      summary: >-
        Get file fixity information for a given file
      description: Returns the file fixity information in the inventory.json manifest
      operationId: getFileFixityByExistingPath
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: path
          in: path
          description: Existing file path of the file within the ORA object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: string
                format: checksum
                example: '66709b068a2faead97113559db78ccd44712cbf2'
            application/json:
              schema:
                type: string
                format: checksum
                example: '66709b068a2faead97113559db78ccd44712cbf2'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
  '/objects/{objectId}/files/fixity/hash/{sha512}':
    get:
      tags:
        - All versions
        - File operations
      summary: >-
        Get file fixity information for a given file
      description: Returns the file fixity information in the inventory.json manifest
      operationId: getFileFixityByHash
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: sha512
          in: path
          description: Hash of the file in the inventory manifest (nomally sha512)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: string
                format: checksum
                example: '66709b068a2faead97113559db78ccd44712cbf2'
            application/json:
              schema:
                type: string
                format: checksum
                example: '66709b068a2faead97113559db78ccd44712cbf2'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
  '/objects/{objectId}/working':
    get:
      tags:
        - Working
      summary: Get OCFL metadata for the current (working) completed version of an object
      description: Returns OCFL metadata for the head of an object, including a list of files
      operationId: getObjectHead
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          description: ID of the specific version to return file information for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OCFLObjectVersion'
            application/json:
              schema:
                $ref: '#/components/schemas/OCFLObjectVersion'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
    delete:
      tags:
        - Working
      summary: Wipe clean the current working version for this object
      description: Resets the working directory for a given object and removes any files which have been added; also removes any instructions to remove files from HEAD version.
      operationId: resetWorking
      parameters:
        - name: objectId
          in: path
          description: ID of object to return list of files for that object
          required: true
          schema:
            type: string
        - name: sha512
          in: path
          description: sha512 of the file to be deleted
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
  '/objects/{objectId}/working/download':
    get:
      tags:
        - Working
      summary: Download current version of an object by ID
      description: Returns either a zip file containing a BagIt bag of all of the files in the current version of an OCFL object, or the URL of a location where the BagIt bag will be available (once copied).
      operationId: downloadObjectHeadById
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/zip:
              schema:
                type: string
                format: binary
            text/plain:
              schema:
                type: string
                format: url
                example: "file:///filepath"
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
  '/objects/{objectId}/working/files':
    get:
      tags:
        - Working
      summary: Get a list of files within the current version of an object
      description: Returns a list of all files relating to the current version of an object
      operationId: getFilesByObjectId
      parameters:
        - name: objectId
          in: path
          description: ID of object to return list of files for that object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
    post:
      tags:
        - Working
      summary: Add a file to the working new version of an OCFL object
      description: Add a file to the working new version of an OCFL object
      operationId: saveFile
      parameters:
        - name: objectId
          in: path
          description: ID of object to return list of files for that object
          required: true
          schema:
            type: string
      requestBody:
        description: File to be uploaded
        content: 
          '*/*':
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
  '/objects/{objectId}/working/files/hash/{sha512}':
    get:
      tags:
        - Working
      summary: >-
        Get information regarding an individual file in the working version of
        an OCFL object by its manifest hash
      description: Returns a list of all manifest information relating to that file
      operationId: getFileByHashforCurrentVersion
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: sha512
          in: path
          description: Hash of the file in the inventory manifest (nomally sha512)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
            application/json:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
    delete:
      tags:
        - Working
      summary: Remove a file from the working new version of an OCFL object, identified by its manfest hash
      description: Remove a file to the working new version of an OCFL object. If the file was added to the working version, but has not yet been committed, remove it from the working version. If the file is in the HEAD of the object, remove it from this version.
      operationId: removeFileFromWorking
      parameters:
        - name: objectId
          in: path
          description: ID of object to return list of files for that object
          required: true
          schema:
            type: string
        - name: sha512
          in: path
          description: Hash of the file in the inventory manifest (nomally sha512)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
  '/objects/{objectId}/working/files/path/{path}':
    get:
      tags:
        - Working
      summary: >-
        Get information regarding an individual file in the working version of
        an OCFL object by its manifest hash
      description: Returns a list of all manifest information relating to that file
      operationId: getFileByPathforCurrentVersion
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: path
          in: path
          description: Logical file path for the file
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
            application/json:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
    delete:
      tags:
        - Working
      summary: Remove a file from the working new version of an OCFL object, identified by its manfest hash
      description: Remove a file to the working new version of an OCFL object. If the file was added to the working version, but has not yet been committed, remove it from the working version. If the file is in the HEAD of the object, remove it from this version.
      operationId: removeFileFromWorkingByPath
      parameters:
        - name: objectId
          in: path
          description: ID of object to return list of files for that object
          required: true
          schema:
            type: string
        - name: path
          in: path
          description: Logical file path of the file in the OCFL object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []

  '/objects/{objectId}/head':
    get:
      tags:
        - Head
      summary: Get OCFL metadata for the last completed version of an object
      description: Returns OCFL metadata for the last version of an object, including a list of that version's files
      operationId: getObjectLast
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          description: ID of the specific version to return file information for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OCFLObjectVersion'
            application/json:
              schema:
                $ref: '#/components/schemas/OCFLObjectVersion'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
  '/objects/{objectId}/head/download':
    get:
      tags:
        - Head
      summary: Download last completed version of an object by ID
      description: Returns either a zip file containing a BagIt bag of all of the files in the last version of an OCFL object, or the URL of a location where the BagIt bag will be available (once copied).
      operationId: downloadObjectLastById
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/zip:
              schema:
                type: string
                format: binary
            text/plain:
              schema:
                type: string
                format: url
                example: "file:///filepath"
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
  '/objects/{objectId}/head/files':
    get:
      tags:
        - Head
        - File operations
      summary: Get a list of files within the current version of an object
      description: Returns a list of all files relating to the current version of an object
      operationId: getFilesLastByObjectId
      parameters:
        - name: objectId
          in: path
          description: ID of object to return list of files for that object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFile'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
  '/objects/{objectId}/head/files/hash/{sha512}':
    get:
      tags:
        - Head
        - File operations
      summary: >-
        Get information regarding an individual file in the last version of
        an OCFL object
      description: Returns a list of all manifest information relating to that file
      operationId: getFileByHashforHead
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: sha512
          in: path
          description: Hash of the file in the inventory manifest (nomally sha512)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
            application/json:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
  '/objects/{objectId}/head/files/download/hash/{sha512}':
    get:
      tags:
        - Head
        - File operations
      summary: >-
        Download an individual file from the last version of an OCFL object
      description: Returns a binary file from an OCFL object
      operationId: downloadFileByHashFromHead
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: sha512
          in: path
          description: Hash of the file in the inventory manifest (nomally sha512)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
  '/objects/{objectId}/head/files/path/{path}':
    get:
      tags:
        - Head
        - File operations
      summary: >-
        Get information regarding an individual file in the last version of
        an OCFL object
      description: Returns a list of all manifest information relating to that file
      operationId: getFileByPathforHead
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: path
          in: path
          description: Logical path of the file in the OCFL object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
            application/json:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
  '/objects/{objectId}/head/files/download/path/{path}':
    get:
      tags:
        - Head
        - File operations
      summary: >-
        Download an individual file from the last version of an OCFL object
      description: Returns a binary file from an OCFL object
      operationId: downloadFileByPathFromHead
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: path
          in: path
          description: Logical path of the file in the OCFL object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
  '/objects/{objectId}/logs':
    get:
      tags:
        - All versions
      summary: Get a list of log files associated with the object
      description: Returns a list of all versions of a single object
      operationId: getLogFilesByObject
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLLogFilePath'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLLogFilePath'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
  '/objects/{objectId}/logs/{logFilePath}':
    get:
      tags:
        - All versions
      summary: Get information on a given log file
      description: Returns details of a log file
      operationId: getLogFile
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
        - name: logFilePath
          in: path
          description: Path of the log file within the logs directory
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OCFLLogFile'
        '400':
          description: Invalid ID or path supplied
        '404':
          description: Object or file not found
      security:
      - AdminApiKeyAuth: []
    post:
      tags:
        - All versions
      summary: Upload a new log file
      description: Add a new log file to the log files directory
      operationId: saveLogFile
      parameters:
        - name: objectId
          in: path
          description: ID of object to add file to
          required: true
          schema:
            type: string
        - name: logFilePath
          in: path
          description: Path of the intended log file within the logs directory
          required: true
          schema:
            type: string
      requestBody:
        description: File to be uploaded
        content: 
          '*/*':
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OCFLLogFile'
        '400':
          description: Invalid ID or path supplied
        '404':
          description: Object or file not found
      security:
      - AdminApiKeyAuth: []
    delete:
      tags:
        - All versions
      summary: Delete a given log file
      description: Purges a log file from the logs directory
      operationId: purgeLogFile
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
        - name: logFilePath
          in: path
          description: Path of the log file within the logs directory
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OCFLObject'
        '400':
          description: Invalid ID or path supplied
        '404':
          description: Object or file not found
      security:
      - AdminApiKeyAuth: []
  '/objects/{objectId}/logs/download/{logFilePath}':
    get:
      tags:
        - All versions
      summary: Load a log file
      description: Returns a log file
      operationId: downloadLogFile
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
        - name: logFilePath
          in: path
          description: Path of the log file within the logs directory
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                type: string
                format: binary
        '400':
          description: Invalid ID or path supplied
        '404':
          description: Object or file not found
      security:
      - AdminApiKeyAuth: []
  '/objects/{objectId}/metadataFingerprint':
    get:
      tags:
        - ORA specific
        - Non-specification
      summary: Get the fingerprint of the current metadata.xml METS file
      description: The finterprint of the object metadata is a SHA512 hash of a serialisation of the metadata fingerprint
      operationId: getMetadataFingerprint
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ORAMetadataFingerprint'
            application/json:
              schema:
                $ref: '#/components/schemas/ORAMetadataFingerprint'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
    post:
      tags:
        - ORA specific
        - Non-specification
      summary: Set the metadata fingerprint for the current version of an object
      operationId: setMetadataFingerprint
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
      requestBody:
        description: Premis metadata to be stored
        content: 
          '*/*':
            schema:
              type: string
              format: xml
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/ORAMetadataFingerprint'
            application/json:
              schema:
                $ref: '#/components/schemas/ORAMetadataFingerprint'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
  '/objects/{objectId}/premis':
    get:
      tags:
        - ORA specific
        - Non-specification
      summary: Get a list of PREMIS metadata relating to an object
      description: Returns a list of all PREMIS logging information relating to an object
      operationId: getPremisMetadata
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ORAPREMISReport'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ORAPREMISReport'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
    put:
      tags:
        - ORA specific
        - Non-specification
      summary: Add new PREMIS metadata to an object
      description: Updates PREMIS information relating to an object with a new item
      operationId: updatePremisMetadata
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
      requestBody:
        description: Premis metadata to be stored
        content: 
          '*/*':
            schema:
              type: string
              format: xml
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ORAPREMISReport'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ORAPREMISReport'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
    post:
      tags:
        - ORA specific
        - Non-specification
      summary: Set a list of premis related metadata relating to an object
      description: Set premis information relating to an object containing multiple files
      operationId: setPremisMetadata
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
      requestBody:
        description: Premis metadata to be stored
        content: 
          '*/*':
            schema:
              type: string
              format: xml
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ORAPREMISReport'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ORAPREMISReport'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
  '/objects/{objectId}/versions':
    get:
      tags:
        - All versions
      summary: Get a list of object versions by object ID
      description: Returns a list of all versions of a single object and their contents
      operationId: getObjectVersionsById
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLObjectVersion'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLObjectVersion'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
    post:
      tags:
        - Working
      summary: Create a new version of an object from the working version
      description: Returns the new object version
      operationId: createNewObjectVersion
      parameters:
        - name: objectId
          in: path
          description: ID of object to create the version in
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLObjectVersion'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLObjectVersion'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - BasicApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
      
  '/objects/{objectId}/versions/{versionId}':
    get:
      tags:
        - Version-specific
      summary: Get OCFL metadata for a specific version of an object
      description: Returns OCFL metadata for a given version of an object, including a list of that version's files
      operationId: getObjectVersionByVersionId
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          description: ID of the specific version to return file information for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OCFLObjectVersion'
            application/json:
              schema:
                $ref: '#/components/schemas/OCFLObjectVersion'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
  '/objects/{objectId}/versions/download/{versionId}':
    get:
      tags:
        - Version-specific
      summary: Download specific version of an object by ID
      description: Returns either a zip file containing a BagIt bag of all of the files in the current version of an OCFL object, or the URL of a location where the BagIt bag will be available (once copied).
      operationId: downloadObjectVersionById
      parameters:
        - name: objectId
          in: path
          description: ID of object to return
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          description: Version of object to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/zip:
              schema:
                type: string
                format: binary
            text/plain:
              schema:
                type: string
                format: url
                example: "file:///filepath"
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
  '/objects/{objectId}/versions/{versionId}/files':
    get:
      tags:
        - Version-specific
        - File operations
      summary: Get a list of files within the a specified version of an object
      description: Returns a list of all files relating to a specific version of an object
      operationId: getFilesByObjectByVersion
      parameters:
        - name: objectId
          in: path
          description: ID of object to return list of files for that object
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          description: ID of the specific version to return file information for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFileVersionless'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OCFLFileVersionless'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
  '/objects/{objectId}/versions/{versionId}/files/hash/{sha512}':
    get:
      tags:
        - Version-specific
        - File operations
      summary: >-
        Get information regarding an individual file in a specific version of
        an OCFL object
      description: Returns a list of all manifest information relating to that file
      operationId: getFileByHashforVersion
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: sha512
          in: path
          description: Hash of the file in the inventory manifest (nomally sha512)
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          description: Version ID of the OCFL object version
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
            application/json:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - MicroservicesApiKeyAuth: []
  '/objects/{objectId}/versions/{versionId}/files/path/{path}':
    get:
      tags:
        - Version-specific
        - File operations
      summary: >-
        Get information regarding an individual file in a specific version of
        an OCFL object
      description: Returns a list of all manifest information relating to that file
      operationId: getFileByPathforVersion
      parameters:
        - name: objectId
          in: path
          description: Object ID of the OCFL object
          required: true
          schema:
            type: string
        - name: path
          in: path
          description: Logical file path of the object within the OCFL object
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          description: Version ID of the OCFL object version
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
            application/json:
              schema:
                $ref: '#/components/schemas/OCFLFileVersionless'
        '400':
          description: Invalid ID supplied
        '404':
          description: Object not found
      security:
      - AdminApiKeyAuth: []
      - MicroservicesApiKeyAuth: []

servers:
  - url: 'https://virtserver.swaggerhub.com/OCFL_client/ORA_OCFL/3.0.0'
components:
  schemas:
    OCFLObject:
      type: object
      required:
        - objectId
      properties:
        digestAlgorithm:
          type: string
          example: "sha512"
        head:
          type: string
          example: "v2"
        manifest:
          type: array
          items:
            $ref: '#/components/schemas/OCFLManifestEntry'
        objectId:
          type: string
          format: uuid
          example: d290f1ee-6c54-4b01-90e6-d701748f0851
        OCFLStandard:
          type: string
          example: "ocfl_object_1.0"
        type:
          type: string
          format: url
          example: "https://ocfl.io/1.0/spec/#inventory"
        versions:
          type: array
          items:
            $ref: '#/components/schemas/OCFLObjectVersion'
    OCFLFile:
      type: object
      description: A particular file within an OCFL object
      required:
        - sha512
      properties:
        sha512:
          type: string
          description: SHA 512 hash of the file
          format: string
          example: 66709b068a2faead97113559db78ccd44712cbf2
        filepath:
          description: Logical file path for the file in the OCFL object
          type: string
          example: binary_file_1.txt
        inVersions:
          description: Versions which contain this file
          type: array
          items:
            $ref: '#/components/schemas/OCFLObjectVersion'
    OCFLFilePath:
      type: object
      description: The existing path to an OCFL file
      required:
      - filepath
      properties:
        filepath:
          type: string
          example: "v2/content/filename.txt"
    OCFLFileVersionless:
      type: object
      description: A particular file within an OCFL object
      required:
        - sha512
      properties:
        sha512:
          type: string
          description: SHA 512 hash of the file
          format: string
          example: 66709b068a2faead97113559db78ccd44712cbf2
        filepath:
          description: Logical file path for the file in the OCFL object
          type: string
          example: binary_file_1.txt
    OCFLManifestEntry:
      type: object
      description: An entry within an OCFL object manifest
      required:
        - sha512
        - filepath
      properties:
        sha512:
          description: Path to the file from the log directory root
          type: string
          example: logfile1.premis
        filepath:
          description: Paths to files matching the sha512
          type: array
          items:
            $ref: "#/components/schemas/OCFLFilePath"
    OCFLLogFile:
      type: object
      description: A file within the logs directory
      required:
        - filepath
      properties:
        filepath:
          description: Path to the file from the log directory root
          type: string
          example: logfile1.premis
        modified:
          description: Date of last file modification
          type: string
          format: date
          example: '2019-01-01'
        size:
          description: Size in bytes of log file
          type: integer
          example: 123012
    OCFLLogFilePath:
      type: object
      description: A files within the logs directory
      required:
        - filepath
      properties:
        filepath:
          description: Path to the file from the log directory root
          type: string
          example: logfile1.premis
    OCFLObjectVersion:
      type: object
      description: A given version of an OCFL object
      required:
        - versionId
      properties:
        versionId:
          type: string
          format: string
          example: v1
        created:
          type: string
          format: date
          example: '2018-02-02T02:02:02Z'
        message:
          type: string
          format: string
          example: 'Reinstate image.tiff, delete empty.txt'
        state:
          type: array
          items:
            $ref: '#/components/schemas/OCFLFile'
        user:
          $ref: '#/components/schemas/OCFLUser'
    OCFLUser:
      type: object
      description: A User in an OCFL manifest
      required:
        - name
      properties:
        name:
          type: string
          format: string
          example: Thomas Wrobel
        address:
          type: string
          format: email
          example: thomas.wrobel@bodleian.ox.ac.uk
    ORAMetadataFingerprint:
      type: object
      description: The fingerprint of a given set of ORA metadata
      required:
        - sha512
      properties:
        sha512:
          type: string
          format: sha512
          example: "da39a3ee5e6b4b0d3255bfef95601890afd80709"
    ORAPREMISReport:
      type: object
      description: A PREMIS report entry (to be determined)
      properties:
        report:
          type: string
          example: "Premis statement"
  securitySchemes:
    AdminApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Admin-Key
    BasicApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    MicroservicesApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Microservices-Key